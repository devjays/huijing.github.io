// ==========
// MIXINS
// -----
// This is a library of mixins written from scratch
// as well as from various known sources to simplify your
// theming efforts.

// Feel free to add on your own mixins to this file as well.
// ==========

// ==========
// CLEARFIX FOR IE8 & ABOVE
// -----
// Referenced from http://css-tricks.com/snippets/css/clear-fix/
// ==========
@mixin cf {
  &::after {
    clear: both;
    content: '';
    display: table;
  }
}

// ==========
// CENTER
// -----
// For centering block elements
// ==========
@mixin center {
  float: none;
  margin-left: auto;
  margin-right: auto;
}

// ==========
// IMAGE REPLACEMENT
// -----
// To replace text with background images.
// Source: http://www.zeldman.com/2012/03/01/replacing-the-9999px-hack-new-image-replacement/
// ==========
@mixin image-replacement {
  overflow: hidden;
  text-indent: 100%;
  white-space: nowrap;
}

// ==========
// BREAKPOINTS
// -----
// Basic breakpoint mixin for writing media queries
// Referenced from http://maketea.co.uk/2014/11/05/managing-responsive-typography-with-sass.html
// ==========
@mixin respond-above($breakpoint-name) {
  $breakpoint-value: breakpoint($breakpoint-name);

  @if $breakpoint-value != null {
    @media screen and (min-width: $breakpoint-value) {
      @content;
    }
  } @else {
    @warn 'Missing breakpoint '#{$breakpoint-name}'';
  }
}

// ==========
// RESPONSIVE TYPOGRAPHY
// -----
// Referenced from http://maketea.co.uk/2014/11/05/managing-responsive-typography-with-sass.html
// ==========

// For a singular font size and line height for a given breakpoint
@mixin text-size($text-size, $breakpoint-name: 'small') {
  $text-size-properties: text-properties-for($text-size, $breakpoint-name);

  @if $text-size-properties != null {
    $font-size: map-get($text-size-properties, 'font-size');
    @include adjust-font-size-to($font-size);
  } @else {
    @warn 'Breakpoint '#{$breakpoint-name}' for text size '#{$text-size}' is not defined';
  }
}

// For looping over the requested text size and output all its breakpoints
@mixin responsive-text-size($text-size, $default-breakpoint: 'small') {
  @include text-size($text-size, $default-breakpoint);

  $text-breakpoints-map: text-breakpoints-for($text-size);
  $text-breakpoints-keys: map-keys($text-breakpoints-map);

  @each $breakpoint-name in $text-breakpoints-keys {
    @if $breakpoint-name != $default-breakpoint and breakpoint($breakpoint-name) != null {
      @include respond-above($breakpoint-name) {
        @include text-size($text-size, $breakpoint-name);
      }
    }
  }
}

// ==========
// Z-INDEX
// -----
// Referenced from https://webdevstudios.com/2015/09/22/using-sass-to-manage-layers-z-index/
// ==========
@mixin z-index($layer, $position:relative) {
  position: $position;
  z-index: layer-index($layer);
}
